services:
  # Base de données MySQL
  mysql:
    image: mysql:8
    container_name: rouedelafortune-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: rouedelafortune
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      # Les scripts ne s'exécutent qu'à la première initialisation du volume
      - ./db/init-mysql.sql:/docker-entrypoint-initdb.d/01-init-mysql.sql
      - ./db/init-mysql-admin.sql:/docker-entrypoint-initdb.d/02-init-mysql-admin.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service de migration de base de données
  # Ce service vérifie si les tables existent et exécute les migrations au besoin
  db-migrations:
    image: mysql:8
    container_name: rouedelafortune-migrations
    restart: "no"
    environment:
      MYSQL_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: rouedelafortune
    volumes:
      - ./db:/db
      - ./scripts:/scripts
    depends_on:
      mysql:
        condition: service_healthy
    command: >
      /bin/bash -c "
      echo 'Vérification et création des tables de la base de données...' &&
      mysql -h mysql -u root -proot -e 'USE rouedelafortune; SHOW TABLES;' | grep -q 'participant' ||
      (echo 'Tables non trouvées, exécution des scripts de migration...' &&
       mysql -h mysql -u root -proot rouedelafortune < /db/init-mysql.sql &&
       mysql -h mysql -u root -proot rouedelafortune < /db/init-mysql-admin.sql &&
       echo 'Migration terminée avec succès!') ||
      echo 'Les tables existent déjà, aucune migration nécessaire.'"

  # Interface phpMyAdmin pour gérer la base de données
  phpmyadmin:
    image: phpmyadmin
    container_name: rouedelafortune-phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - mysql

  # Application frontend (Rouedelafortune)
  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    container_name: rouedelafortune-app
    restart: always
    environment:
      DATABASE_URL: mysql://user:password@mysql:3306/rouedelafortune
      USE_MYSQL: 'true'
      MOCK_MODE: 'false'
      MYSQL_HOST: mysql
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: rouedelafortune
    ports:
      - "8888:3000"
    depends_on:
      db-migrations:
        condition: service_completed_successfully
    volumes:
      - ./:/app
      - /app/node_modules/

volumes:
  mysql-data:
